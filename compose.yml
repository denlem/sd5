services:
  nginx:
    container_name: ${PROJECT_NAME}_nginx
    hostname: "${PROJECT_NAME}_nginx"
    shm_size: '4gb'
    build:
      context: ./config/docker/nginx
      dockerfile: Dockerfile
    volumes:
      - ./config/docker/nginx/dev.nginx.conf:/etc/nginx/nginx.conf
      - ./config/docker/nginx/vhosts:/etc/nginx/vhosts
      - ./:/var/www/symfony:rw
    restart: ${CONTAINER_RESTART}
    ports:
      - "8081:80"
    networks:
      - esports_network
    depends_on:
      - php-fpm

  php-fpm:
    container_name: ${PROJECT_NAME}_php_fpm
    hostname: "${PROJECT_NAME}_php_fpm"
    shm_size: '2gb'
    restart: ${CONTAINER_RESTART}
    build:
      context: .
      dockerfile: config/docker/php-fpm/Dockerfile
    volumes:
      - ./:/var/www/symfony:rw
      - ./config/docker/php-fpm/php.ini:/usr/local/etc/php/php.ini
      - ./config/docker/php-fpm/php.override.ini:/usr/local/etc/php/php.override.ini
    networks:
      - esports_network
    depends_on:
      - db

  php-cli:
    container_name: ${PROJECT_NAME}_php_cli
    hostname: "${PROJECT_NAME}_php_fpm"
    shm_size: '2gb'
    restart: ${CONTAINER_RESTART}
    build:
      context: .
      dockerfile: config/docker/php-cli/Dockerfile
    volumes:
      - ./:/var/www/symfony:rw
      - ./config/docker/php-cli/php.ini:/usr/local/etc/php/php.ini
      - ./config/docker/php-cli/php.override.ini:/usr/local/etc/php/php.override.ini
    networks:
      - esports_network
    depends_on:
      - php-fpm

  keydb:
    image: eqalpha/keydb
    container_name: ${PROJECT_NAME}_keydb
    restart: ${CONTAINER_RESTART}
    ports:
      - "6379:6379"
    volumes:
      - data:/data
    command: ["--requirepass", "${KEYDB_PASSWORD}"]
#    command: keydb-server /etc/keydb/redis.conf --server-threads 2
    networks:
      - esports_network
    depends_on:
      - nginx

  db:
    image: percona/percona-xtradb-cluster:8.0
    container_name: "${PROJECT_NAME}_percona"
    hostname: "${PROJECT_NAME}_percona"
    restart: ${CONTAINER_RESTART}
    build:
      context: config/docker/percona
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    ports:
      - "3306:3306"
    volumes:
      - db_esports_percona_v8:/var/lib/mysql
    networks:
      - esports_network

  cron:
    container_name: "${PROJECT_NAME}_cron"
    restart: ${CONTAINER_RESTART}
    image: mcuadros/ofelia:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/docker/cron/config.${CLI_ENV}.ini:/etc/ofelia/config.ini
    networks:
      - esports_network

networks:
  esports_network:
    driver: bridge

volumes:
  db_esports_percona_v8:
  data:
    driver: local